import json
import time
import iota
import datetime
import paho.mqtt.client as mqtt
import paho.mqtt.publish as publish
from datetime import datetime
from iota import Address, ProposedTransaction, Tag, Transaction, Iota, TryteString

##### MQTT SETTINGS #####

broker = "192.168.1.104"

sub_topic = "Json/test"

pub_topic = "confirmation"

##### IOTA SETTIGNS #####

SEED = 'TZ9FAELAEDZRIJBYXJBMNPSKOBUBONNOBF9WURC9AIT9M9DUECVHOWNNBARMXR9BNSESLLKWVRWBPMRSR'
ADDRESS = 'SZQ9KEGNOJQTEEHURGSOFAKDAAIBPXTISDEUAYJIWENGVBSCMDXXZILFANJKQ9LYZYLBOCIPLL9R9JWXARZGCMBOLY' 
tag = iota.Tag('SENSORDATA') #Tag for in the message.
api = Iota('http://173.212.218.8:14265/', SEED) #POW node #################### SEED IS NEEDED TO DO THE SIGNING


##### MQTT SUBSCRIPTION #####

def on_connect(client, userdata, flags, rc):
    print("Connected with result code "+str(rc))
    client.subscribe(sub_topic)

def on_message(client, userdata, msg):
    topic=msg.topic
    m_decode=str(msg.payload.decode("utf-8", "ignore"))
    m_in=json.loads(m_decode)
    print ("\nRecieved Data\n")
    print ("data recieved = ", m_decode)
    print (type(m_decode))
    print ("converted data = ", m_in)
    print (type(m_in))
    
    print ('String data:',json.dumps(m_in)) # prints dictionary data converted in JSON object
    trytes = TryteString.from_string(json.dumps(m_in)) # Code Json data in trytes
    
    print('Message sent to tangle:',trytes.decode()) # shows decoded msg sent to tangle 

    print('sleep...')
    time.sleep(2)
    print(api)
    t0 = time.time()
    api.send_transfer(
        depth = 3,
        transfers = [ProposedTransaction(address =  Address(ADDRESS),
          value = 0,
          tag = tag,
          message = trytes,),],)
    t1 = time.time()
    print('Time:',datetime.now().strftime('%H:%M:%S'),' data transfered! in:', round((t1 - t0),1 ), 'seconds ')
    

client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message
client.connect(broker, 1883, 60)

client.loop_forever()
